android_binary(
  name = 'app',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_en',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  locales = ['en'],
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_reorder_dex',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  reorder_classes_intra_dex = True,
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_mdpi',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
  resource_filter = ['mdpi']
)

android_binary(
  name = 'app_hdpi_xhdpi',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
  resource_filter = ['hdpi', 'xhdpi']
)

android_binary(
  name = 'app_str',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
  resource_compression = 'enabled_strings_only',
)

android_binary(
  name = 'app_comp_str',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
  resource_compression = 'enabled_with_strings_as_assets',
)

android_binary(
  name = 'app_comp_str_xhdpi',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
  resource_compression = 'enabled_with_strings_as_assets',
  resource_filter = ['xhdpi']
)

android_binary(
  name = 'app_res_lib_dep',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
      '//res/com/sample/base:base_with_lib_dep',
  ],
)

android_binary(
  name = 'app_with_multiple_rdot_java_packages',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//java/com/sample2:lib',
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_deps_resource_with_ignored_file',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//res/com/sample/with_ignored_file:res',
  ],
)

android_binary(
  name = 'app_cxx_lib_dep',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'arm',
    'armv7',
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:lib',
  ],
)

android_binary(
  name = 'app_with_disguised_exe',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//native/mybinary/jni:mybinary',
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_with_ndk_library',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//native/fakenative/jni:fakenative',
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_cxx_lib_dep_modular',
  manifest = 'AndroidManifest.xml',
  application_module_targets = [
    '//native/cxx:lib',
  ],
  keystore = '//keystores:debug',
  cpu_filters = [
    'arm',
    'armv7',
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:lib',
  ],
)

android_binary(
  name = 'app_cxx_lib_dep_no_filters',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:lib',
  ],
)

android_binary(
  name = 'app_xdso_dce',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  enable_relinker = True,
  cpu_filters = [],
  deps = [
    '//res/com/sample/base:base',
    '//native/xdsodce:top',
  ],
)

android_binary(
  name = 'app_no_xdso_dce',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [],
  deps = [
    '//res/com/sample/base:base',
    '//native/xdsodce:top',
  ],
)

android_binary(
  name = 'app_no_cxx_deps',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'arm',
    'armv7',
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
  ],
)

android_binary(
  name = 'app_proguard_dontobfuscate',
  proguard_config = 'dontobfuscate.pro',
  package_type = 'release',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
)

android_aar(
  name = 'nearly_empty_aar',
  manifest_skeleton = 'AndroidManifest.xml',
)

android_binary(
  name = 'app_static_cxx_lib_dep',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:headeronly',
  ],
)

android_binary(
  name = 'app_with_native_lib_proguard',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  package_type = 'release',
  proguard_config = 'dontobfuscate.pro',
  cpu_filters = [
    'arm',
    'armv7',
    'x86',
  ],
  native_library_proguard_config_generator = '//native/proguard_gen:generator',
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:lib',
  ],
)

android_binary(
  name = 'app_cxx_lib_asset',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:libasset',
  ],
  package_asset_libraries = True
)

android_binary(
  name = 'app_cxx_different_rule_name',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:libasset',
  ],
  package_asset_libraries = True
)

android_binary(
  name = 'app_cxx_lib_asset_no_package',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:libasset',
  ],
  package_asset_libraries = False
)

android_binary(
  name = 'app_compress_lib_asset',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:libasset',
    '//native/cxx:libasset2',
  ],
  package_asset_libraries = True,
  compress_asset_libraries = True
)

android_binary(
  name = 'app_compress_lib_asset_modular',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  application_module_targets = [
    '//native/cxx:libasset',
  ],
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:libasset',
    '//native/cxx:libasset2',
  ],
  package_asset_libraries = True,
  compress_asset_libraries = True
)

android_binary(
  name = 'app_cxx_lib_asset_no_package_modular',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  application_module_targets = [
    '//native/cxx:libasset',
  ],
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:libasset',
    '//native/cxx:libasset2',
  ],
  package_asset_libraries = False,
  compress_asset_libraries = True
)

android_binary(
  name = 'app_cxx_lib_no_package_modular',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  application_module_targets = [
    '//native/cxx:foo1',
    '//native/cxx:libasset',
  ],
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:foo1',
    '//native/cxx:foo2',
    '//native/cxx:libasset',
    '//native/cxx:libasset2',
  ],
  package_asset_libraries = False,
  compress_asset_libraries = True
)

android_binary(
  name = 'app_header_only_cxx_lib_dep',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  cpu_filters = [
    'x86',
  ],
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:headeronly',
  ],
)

android_binary(
  name = 'app_with_x86_lib',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//res/com/sample/base:base',
    '//native/cxx:x86-only',
  ],
)

android_binary(
  name = 'app_with_no_res',
  manifest = 'AndroidManifestNoRes.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/small:small_with_no_resource_deps',
  ],
)

android_binary(
  name = 'app_with_no_res_or_predex',
  manifest = 'AndroidManifestNoRes.xml',
  keystore = '//keystores:debug',
  package_type = 'release',
  proguard_config = 'dontobfuscate.pro',
  deps = [
    '//java/com/sample/small:small_with_no_resource_deps',
  ],
)


android_binary(
  name = 'app_with_aar_and_no_res',
  manifest = 'AndroidManifestNoRes.xml',
  keystore = '//keystores:debug',
  deps = [
    '//third-party:card-io',
  ],
)

android_binary(
  name = 'app_redex',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  proguard_config = 'dontobfuscate.pro',
  package_type = 'release',
  redex = True,
  redex_config = 'redex-config.json',
  redex_extra_args = [
    '-Jmy_param_name={"foo": true}',
    '--redex-binary',
    'redex-binary',
    '-j $(location //java/com/sample/lib:lib)',
    '-S coldstart_classes=$(location //tools/redex:secondary_dex_head.list)',
  ],
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
)

genrule(
  # Hackily check for the presence of aapt2 until all of our users have it.
  name = 'check_for_aapt2',
  bash = 'test -x `dirname $DX`/aapt2 > $OUT',
  out = 'does-aapt2-exist',
)

android_binary(
  name = 'app_with_aapt2',
  aapt_mode = 'aapt2',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
  ],
)

genrule(
  name = 'disassemble_app_with_aapt2',
  bash = ' && '.join([
      '$(exe //third-party/smali:baksmali) -o $TMP $(location :app_with_aapt2)',
      'cat $TMP/com/*/R*.smali > $OUT',
      ]),
  out = 'disassembled_aapt2.smali',
)

genrule(
  name = 'resource_dump_app_with_aapt2',
  # Using the DX environment variable here is a total hack.
  # Ideally, we'd have a special genrule that made the Android
  # tools available.
  bash = '`dirname $DX`/aapt dump resources $(location :app_with_aapt2) > $OUT',
  out = 'dump_aapt2_resources.txt',
)

android_instrumentation_apk(
  name = 'instrumentation_apk',
  manifest = 'AndroidInstrumentationManifest.xml',
  apk = ':app',
  deps = [
    '//third-party:card-io',
  ],
)

android_binary(
  name = 'app_with_merged_libs',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib1.so': ['.*/merge:[AB]'],
    'lib2.so': ['.*/merge:[EF]'],
  },
  native_library_merge_glue = '//native/merge:glue_1',
  native_library_merge_code_generator = '//native/merge:codegen',
)

android_binary(
  name = 'app_with_merged_libs_modular',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  application_module_targets = [
    '//native/merge:A',
  ],
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib1.so': ['.*/merge:[AB]'],
    'lib2.so': ['.*/merge:[EF]'],
  },
  native_library_merge_glue = '//native/merge:glue_1',
  native_library_merge_code_generator = '//native/merge:codegen',
)

genrule(
  name = 'disassemble_app_with_merged_libs_gencode',
  bash = ' && '.join([
      '$(exe //third-party/smali:baksmali) -o $TMP $(location :app_with_merged_libs)',
      'cat $TMP/com/gen/*.smali > $OUT',
      ]),
  out = 'disassembled_gencode.smali',
)

android_binary(
  name = 'app_with_merge_lib_into_two_targets',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib1.so': ['.*/merge:[AB]'],
    'lib2.so': ['.*/merge:[BC]'],
  },
)

android_binary(
  name = 'app_with_circular_merged_libs',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'libbroken.so': ['.*/merge:[CF]'],
  },
)

android_binary(
  name = 'app_with_circular_merged_libs_including_root',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:C',
  ],
  native_library_merge_map = {
    'libbroken.so': ['.*/merge:[CF]'],
  },
)

android_binary(
  name = 'app_with_cross_asset_merged_libs',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'libbroken.so': ['.*/merge:[AC]'],
  },
)

android_binary(
  name = 'app_with_alternate_merge_glue',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib1.so': ['.*/merge:[AB]'],
    'lib2.so': ['.*/merge:[EF]'],
  },
  native_library_merge_glue = '//native/merge:glue_2',
)

android_binary(
  name = 'app_with_alternate_merge_glue_and_localized_symbols',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib1.so': ['.*/merge:[AB]'],
    'lib2.so': ['.*/merge:[EF]'],
  },
  native_library_merge_glue = '//native/merge:glue_2',
  native_library_merge_localized_symbols = ['glue_2'],
)

android_binary(
  name = 'app_with_invalid_native_lib_merge_glue',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib1.so': ['.*/merge:[AB]'],
    'lib2.so': ['.*/merge:[EF]'],
  },
  native_library_merge_glue = '//keystores:debug',
)

android_binary(
  name = 'app_with_merge_into_existing_lib',
  manifest = 'AndroidManifest.xml',
  keystore = '//keystores:debug',
  deps = [
    '//java/com/sample/lib:lib',
    '//res/com/sample/base:base',
    '//native/merge:A',
  ],
  native_library_merge_map = {
    'lib2e.so': ['.*/merge:[EF]'],
  },
)
