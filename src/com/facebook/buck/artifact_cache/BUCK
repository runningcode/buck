PUBLIC_API_SOURCES = [
    "ArtifactCacheFactory.java",
    "AbstractArtifactInfo.java",
    "AbstractCacheResult.java",
    "AbstractNetworkCacheArgs.java",
    "ArtifactCache.java",
    "ArtifactCacheEvent.java",
    "ArtifactCacheEventFactory.java",
    "HttpArtifactCacheEvent.java",
    "DirArtifactCache.java",
    "DirArtifactCacheEvent.java",
    "ArtifactCacheConnectEvent.java",
    "CacheResultType.java",
    "CacheReadMode.java",
    "ArtifactCacheMode.java",
    "NoopArtifactCache.java",
]

java_immutables_library(
    name = "artifact_cache",
    srcs = PUBLIC_API_SOURCES,
    tests = [
        "//test/com/facebook/buck/artifact_cache:artifact_cache",
    ],
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "//src/com/facebook/buck/cli:config",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/log:api",
        "//src/com/facebook/buck/log/views:views",
        "//src/com/facebook/buck/model:build_id",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/rules:rule_key",
        "//src/com/facebook/buck/slb:slb",
        "//src/com/facebook/buck/util:io",
        "//third-party/java/jackson:jackson-annotations",
    ],
)

PROTOCOL_SOURCES = [
    "HttpArtifactCacheBinaryProtocol.java",
]

java_immutables_library(
    name = "binary_protocol",
    srcs = PROTOCOL_SOURCES,
    tests = [
        "//test/com/facebook/buck/artifact_cache:artifact_cache",
    ],
    visibility = [
        "//src/com/facebook/buck/artifact_cache:generate_hybrid_payloads",
        "//src/com/facebook/buck/httpserver:cache_handler",
        "//test/com/facebook/buck/artifact_cache:artifact_cache",
    ],
    deps = [
        ":artifact_cache",
        "//src/com/facebook/buck/rules:rule_key",
        "//src/com/facebook/buck/util/hash:hash",
    ],
)

CONFIG_SOURCES = [
    "ArtifactCacheBuckConfig.java",
    "ArtifactCaches.java",
    "SingletonArtifactCacheFactory.java",
]

java_immutables_library(
    name = "config",
    srcs = CONFIG_SOURCES,
    tests = [
        "//test/com/facebook/buck/artifact_cache:artifact_cache",
        "//test/com/facebook/buck/httpserver:httpserver_cache_integration_test",
    ],
    visibility = [
        "//src/com/facebook/buck/cli:cli",
        "//src/com/facebook/buck/event/listener:listener",
        "//src/com/facebook/buck/httpserver:cache_handler",
        "//src/com/facebook/buck/ide/intellij:intellij",
        "//test/com/facebook/buck/artifact_cache/...",
        "//test/com/facebook/buck/cli/...",
        "//test/com/facebook/buck/httpserver:httpserver_cache_integration_test",
    ],
    deps = [
        ":artifact_cache",
        ":impl",
        "//src/com/facebook/buck/cli:config",
        "//src/com/facebook/buck/config:config",
        "//src/com/facebook/buck/event:event",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/log:api",
        "//src/com/facebook/buck/randomizedtrial:randomizedtrial",
        "//src/com/facebook/buck/slb:slb",
        "//src/com/facebook/buck/timing:timing",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/unit:unit",
        "//third-party/java/okhttp:okhttp",
    ],
)

GENERATOR_SOURCE = [
    "HybridPayloadGenerator.java",
]

java_library(
    name = "impl",
    srcs = glob(
        ["*.java"],
        excludes = PUBLIC_API_SOURCES + CONFIG_SOURCES + PROTOCOL_SOURCES + GENERATOR_SOURCE,
    ),
    tests = [
        "//test/com/facebook/buck/artifact_cache:artifact_cache",
    ],
    visibility = [
        "//test/com/facebook/buck/artifact_cache/...",
    ],
    deps = [
        ":artifact_cache",
        ":binary_protocol",
        "//src-gen:thrift",
        "//src/com/facebook/buck/counters:counters",
        "//src/com/facebook/buck/event:event",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/io:BuckPaths",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/log:api",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/rules:rule_key",
        "//src/com/facebook/buck/slb:slb",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/sha1:sha1",
        "//third-party/java/guava:guava",
        "//third-party/java/okhttp:okhttp",
    ],
)

java_binary(
    name = "generate-hybrid-payloads",
    main_class = "com.facebook.buck.artifact_cache.HybridPayloadGenerator",
    deps = [
        ":lib-generate-hybrid-payloads",
        "//src-gen:thrift",
        "//src/com/facebook/buck/android:utils",
        "//src/com/facebook/buck/artifact_cache:artifact_cache",
        "//src/com/facebook/buck/cli:config",
        "//src/com/facebook/buck/config:config",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/graph:graph",
        "//src/com/facebook/buck/io:BuckPaths",
        "//src/com/facebook/buck/io:ProjectFilesystemDelegate",
        "//src/com/facebook/buck/io:executable-finder",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/io:transport",
        "//src/com/facebook/buck/jvm/core:packagefinder",
        "//src/com/facebook/buck/model:build_id",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/model:simple_types",
        "//src/com/facebook/buck/parser:rule_pattern",
        "//src/com/facebook/buck/rules:build_rule",
        "//src/com/facebook/buck/rules:interfaces",
        "//src/com/facebook/buck/rules:relative_cell_name",
        "//src/com/facebook/buck/rules:rule_key",
        "//src/com/facebook/buck/rules/coercer:interface",
        "//src/com/facebook/buck/shell:worker_process",
        "//src/com/facebook/buck/slb:slb",
        "//src/com/facebook/buck/step:step",
        "//src/com/facebook/buck/test/result/type:type",
        "//src/com/facebook/buck/timing:timing",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:io",
        "//src/com/facebook/buck/util:process_executor",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/autosparse:autosparse_config",
        "//src/com/facebook/buck/util/concurrent:concurrent",
        "//src/com/facebook/buck/util/environment:platform",
        "//src/com/facebook/buck/util/immutables:immutables",
        "//src/com/facebook/buck/util/sha1:sha1",
        "//src/com/facebook/buck/util/versioncontrol:versioncontrol",
        "//src/com/facebook/buck/versions:types",
        "//third-party/java/gson:gson",
        "//third-party/java/guava:guava",
        "//third-party/java/immutables:immutables",
        "//third-party/java/infer-annotations:infer-annotations",
        "//third-party/java/jackson:jackson-annotations",
        "//third-party/java/jackson:jackson-core",
        "//third-party/java/jackson:jackson-databind",
        "//third-party/java/jna:jna",
        "//third-party/java/jsr:jsr305",
        "//third-party/java/okhttp:okhttp",
        "//third-party/java/okio:okio",
        "//third-party/java/thrift:libthrift",
    ],
)

java_library(
    name = "lib-generate-hybrid-payloads",
    srcs = GENERATOR_SOURCE,
    visibility = ["PUBLIC"],
    deps = [
        "//src-gen:thrift",
        "//src/com/facebook/buck/android:utils",
        "//src/com/facebook/buck/artifact_cache:artifact_cache",
        "//src/com/facebook/buck/artifact_cache:impl",
        "//src/com/facebook/buck/cli:config",
        "//src/com/facebook/buck/config:config",
        "//src/com/facebook/buck/event:interfaces",
        "//src/com/facebook/buck/event/external:external_lib",
        "//src/com/facebook/buck/graph:graph",
        "//src/com/facebook/buck/io:BuckPaths",
        "//src/com/facebook/buck/io:ProjectFilesystemDelegate",
        "//src/com/facebook/buck/io:executable-finder",
        "//src/com/facebook/buck/io:io",
        "//src/com/facebook/buck/io:transport",
        "//src/com/facebook/buck/jvm/core:packagefinder",
        "//src/com/facebook/buck/model:build_id",
        "//src/com/facebook/buck/model:model",
        "//src/com/facebook/buck/model:simple_types",
        "//src/com/facebook/buck/parser:rule_pattern",
        "//src/com/facebook/buck/rules:build_rule",
        "//src/com/facebook/buck/rules:interfaces",
        "//src/com/facebook/buck/rules:relative_cell_name",
        "//src/com/facebook/buck/rules:rule_key",
        "//src/com/facebook/buck/rules/coercer:interface",
        "//src/com/facebook/buck/shell:worker_process",
        "//src/com/facebook/buck/slb:slb",
        "//src/com/facebook/buck/step:step",
        "//src/com/facebook/buck/test/result/type:type",
        "//src/com/facebook/buck/timing:timing",
        "//src/com/facebook/buck/util:exceptions",
        "//src/com/facebook/buck/util:io",
        "//src/com/facebook/buck/util:process_executor",
        "//src/com/facebook/buck/util:util",
        "//src/com/facebook/buck/util/autosparse:autosparse_config",
        "//src/com/facebook/buck/util/concurrent:concurrent",
        "//src/com/facebook/buck/util/environment:platform",
        "//src/com/facebook/buck/util/immutables:immutables",
        "//src/com/facebook/buck/util/sha1:sha1",
        "//src/com/facebook/buck/util/versioncontrol:versioncontrol",
        "//src/com/facebook/buck/versions:types",
        "//third-party/java/gson:gson",
        "//third-party/java/guava:guava",
        "//third-party/java/immutables:immutables",
        "//third-party/java/infer-annotations:infer-annotations",
        "//third-party/java/jackson:jackson-annotations",
        "//third-party/java/jackson:jackson-core",
        "//third-party/java/jackson:jackson-databind",
        "//third-party/java/jna:jna",
        "//third-party/java/jsr:jsr305",
        "//third-party/java/okhttp:okhttp",
        "//third-party/java/okio:okio",
        "//third-party/java/thrift:libthrift",
    ],
)
